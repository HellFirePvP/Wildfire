buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

version = "0.1"
group = "hellfirepvp.wildfire"
archivesBaseName = "wildfire"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2-14.23.1.2605"
    runDir = "run"
    mappings = "snapshot_20171003"
}

repositories {

    maven {
        // location of the maven that hosts JEI files
        url = "http://dvs1.progwml6.com/files/maven"
    }

    maven {
        // CraftTweaker
        name 'jared maven'
        url "http://maven.blamejared.com/"
    }
}

dependencies {

    def jei_mc_version = "1.12.2"
    def jei_version = "4.8.5.151"

    ////JEI stuff
    deobfCompile "mezz.jei:jei_${jei_mc_version}:${jei_version}"

    def mc_version = "1.12"
    def ct_mc_version = "MC1120"
    def ct_version = "4.1.2.404"

    deobfCompile("CraftTweaker2:CraftTweaker2-${ct_mc_version}-Main:${mc_version}-${ct_version}")

}

task signMainJar(type: SignJar, dependsOn: reobfJar) {
    onlyIf { // Skip the task if our secret data isn't available
        project.hasProperty('keyStore')
    }
    if (project.hasProperty('keyStore')) { // This needs to be a path to the keystore file
        keyStore = project.keyStore
        alias = project.alias
        storePass = project.storePass
        keyPass = project.keyPass
        inputFile = jar.archivePath
        outputFile = jar.archivePath
    }
}
build.dependsOn signMainJar

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
